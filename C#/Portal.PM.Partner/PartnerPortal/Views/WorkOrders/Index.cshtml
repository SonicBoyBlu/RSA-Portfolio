@model System.DateTime
@{
    ViewBag.Title = "Work Order Review";
    ViewBag.TitleIcon = "fa-file-invoice-dollar";
    ViewBag.Nav = "invoices";

    var me = Identity.Current;
    var dateOldest = Model.Date;
}
<script type="text/javascript">
    var dateOldest = new Date(@dateOldest.Year, @dateOldest.AddMonths(-1).Month, @dateOldest.Day); //  "@Model.Date.ToString("yyyy/MM/dd")";
</script>


@if (me.IsAdmin)
{
    @Html.Partial("partials/_WorkOrderWorkflow")
}
<div id="MainWorkOrders" ng-controller="WorkOrderController as ctl" ng-cloak>
    @Html.Partial("partials/_invoicePreviewTabs")
</div>



<!-- Work Order Import Workflow : Keeping legacy code for import workflow  -->
@section modals {
    <div class="modal fade" id="mdl-workorder-upload" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-content-wrapper">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"><i class="fa fa-times-circle text-danger"></i></span><span class="sr-only">Close</span></button>
                    </div>
                    <div class="modal-body">
                        <h1><i class="fa fa-file-upload"></i> Upload Work Orders</h1>
                        <p id="csv-import-status"></p>
                        <form enctype="multipart/form-data" method="post" action="@Url.Action(" ImportWorkOrders", "WorkOrders" )" id="form-upload-work-orders">
                            <div class="row">
                                <div class="col-3">
                                    CSV Files:
                                </div>
                                <div class="col-9">
                                    <input type="file" multiple accept=".csv" name="file[]" class="form-control" required />
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="btn btn-outline-danger" data-dismiss="modal">Cancel</div> @* id="btn-preview-invoices"*@
                                <button type="submit" class="btn btn-success" id="btn-upload">Upload</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Work Order Delete Confirm -->
    <div class="modal fade" id="mdl-workorder-delete-confirm" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-content-wrapper">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"><i class="fa fa-times-circle text-danger"></i></span><span class="sr-only">Close</span></button>
                    </div>
                    <div class="modal-body">
                        <h1><i class="fa fa-exclamation-triangle text-warning"></i> Confirm Edit</h1>
                        <p>
                            By editing this work order in Breezeway, the record will be removed from this preview and will need to be re-imported.
                        </p>
                        <p>
                            Do you wish to continue?
                        </p>
                    </div>
                    <div class="modal-footer text-right">
                        <div class="btn btn-outline-warning" data-dismiss="modal">Cancel</div>
                        <div class="btn btn-info btn-breeway-task-edit-confirm" data-task-id="" data-dismiss="modal">Proceed</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- QBO Commit Confirm -->
    <div class="modal fade" id="mdl-qbo-commit-confirm" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-content-wrapper">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"><i class="fa fa-times-circle text-danger"></i></span><span class="sr-only">Close</span></button>
                    </div>
                    <div class="modal-body">
                        <h1 class="text-danger"><i class="fa fa-exclamation-triangle"></i> Confirm QBO Commit</h1>
                        <p>
                            By confirming commit, you are verifying that these <strong class="qbo-commit-count"></strong> invoices have been imported into QuickBooks.  This will perminently lock the records, even for admins.  This action cannot be undone.
                        </p>
                        <p>
                            Do you wish to continue?
                        </p>
                    </div>
                    <div class="modal-footer text-right">
                        <div class="btn btn-outline-warning" data-dismiss="modal">Cancel</div>
                        <div class="btn btn-danger" id="btn-qbo-lock-confirm" data-dismiss="modal">Commit</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Show Error log -->
    <div class="modal fade" id="mdl-workorder-errors" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-content-wrapper">
                    <div class="modal-header">
                        <h1 class="text-danger"><i class="fa fa-exclamation-triangle"></i> Import Error Log</h1>
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"><i class="fa fa-times-circle text-danger"></i></span><span class="sr-only">Close</span></button>
                    </div>
                    <div class="modal-body"></div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        $(function () {
            // https://github.com/CodeSeven/toastr
            toastr.options = {
                "closeButton": true,
                "closeHtml": "<button><i class='fa fa-arrow-right'></i></button>",
                "debug": true,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-bottom-right",
                "preventDuplicates": true,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "300000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut",
                "escapeHtml": false
            };
        });


        var Invoices = {
            config: {
                updates: false,
                lastTab: 0,
                dates: {
                    start: "",
                    end: ""
                },
                cache: false,
                commitCount: 0,
                progressToast: null,
                uploadProgress: 0,
                progressReset: true,
                progress: {
                    timer: null
                }
            },
            render: {
                uploadProgress: function () {
                    if (!Invoices.config.progressToast)
                        Invoices.config.progressToast = toastr.info("...", "Inintializing", { timeOut: 0 });
                    Invoices.config.progress.timer = setInterval(function () {
                        //debugger;
                        $.ajax({
                            url: "@Url.Action("ProgressPoll", "WorkOrders")",
                            data: { Reset: Invoices.config.progressReset },
                            success: function (d) {
                                d = d.res;
                                console.log("Is Complete: " + d.IsProcessing);
                                //debugger;
                                if (d.IsProcessing === false) {
                                    clearInterval(Invoices.config.progress.timer);
                                    if(Invoices.config.progressToast)
                                        Invoices.config.progressToast.fadeOut();
                                    Invoices.config.uploadProgress = 0;
                                    Invoices.config.progressReset = true;
                                } else {
                                    Invoices.config.progressToast.find(".toast-title").text(d.Title);
                                    Invoices.config.progressToast.removeClass("toast-info toast-success toast-warning toast-primary toast-danger toast-error").addClass(d.ToastrClass);
                                    Invoices.config.progressToast.find(".toast-message").html(d.Body);
                                }
                            }
                        });
                    }, 1500);

                }
            },
            import: {
                workOrders: function (formData, forceRetry) {
                    var mdl = $("#mdl-workorder-upload"),
                        status = $("#csv-import-status", mdl),
                        form = $("form", mdl);

                    //debugger;
                    if (forceRetry) {
                        //Invoices.config.progressToast.fadeOut();
                        formData.append("IsForceRetry", true);
                        debugger;
                    }

                    //Progress indication
                    //debugger;
                    Invoices.render.uploadProgress();

                    $.ajax({
                        url: "@Url.Action("ImportWorkOrders", "WorkOrders")",
                        type: "post",
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (d)
                        {
                            console.log(d);
                            //debugger;
                            if (d.success === true) {
                                angularInvoiceRefresh();
                                mdl.modal("hide");
                                toastr.success(d.message);
                            } else {
                                toastr.error(d.error);
                                Invoices.import.workOrders(formData, true);
                            }
                        },
                        beforeSend: function () {
                            form.hide();
                            status.html("<span class='text-info'><i class='fa fa-cog fa-spin'></i> Loading.  Please wait...</span>").show();
                        },
                        error: function (xhr, desc, err)
                        {
                            debugger;
                            status.html("<span class='text-danger'>" + xhr.responseText + "</span>");
                            form.show();
                            console.error(xhr);
                        }
                    });
                }
            }
        };

        $(document).on("click", "#btn-workorder-import", function () {
            var mdl = $("#mdl-workorder-upload"),
                status = $("#csv-import-status", mdl),
                form = $("form", mdl);
            status.hide();
            form.show();
            mdl.modal("show");
        });

        $(document).on("submit", "form", function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            Invoices.import.workOrders(formData);
        });

        //*
        $(document).on("click", "#btn-qbo-csv-download", function (e) {
            //e.preventDefault();
            var i = $(this),
                href = i.attr("href").split('?')[0],
                query = Invoices.fetch.QboFile();
            i.attr("href", function () {
                return href + query;
            });
        });
        //*/

        $(document).on("click", "#btn-workorder-errors", function () {
            var mdl = $("#mdl-workorder-errors"),
                body = $(".modal-body", mdl);
            mdl.modal("show");
            $.ajax({
                url: "/WorkOrders/FetchErrorLog",
                beforeSend: function () {
                    body.html("loading");
                },
                success: function (d) {
                    body.html(d);
                }
            });
        });

        $(document).on("click", "#btn-quickbooks-customer-sync", function () {
            var i = $(this),
                icon = $(".fa", i);
            icon.removeClass("fa-user-cog").addClass("fa-sync fa-spin");
            $.ajax({
                url: "/WorkOrders/QboRefreshCustomers",
                success: function (d) {
                    icon.addClass("fa-user-cog").removeClass("fa-sync fa-spin");
                    toastr.success(d.message);
                }
            });
        });
    </script>
}
